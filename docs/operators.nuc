#!
#   Nucleus - Operators
#
# Operators that are found within Nucleus are synonymous with other programming
# languages. There is little to NO difference between that of ANSI C and Nucleus
# in terms of operators. The only item to note is that if a "&&" operator fails on
# the inital item, the rest of the expression is deemed false. Otherwise, the only
# operator with some oddities is the "+" operator due to the nature of Nucleus
# being a dynamic language.
!#

# binary operators
1 + 1;  # 2
1 - 1;  # 0
1 * 2;  # 2
1 / 2;  # 0.5
7 % 3;  # 1

# unary operators
-1;     # -1
!true;  # false

# equality / comparison
1 == 1; # true
2 != 1; # true
2 > 1;  # true
1 >= 2; # false
0 < -5; # false
1 <= 1; # true

# bitwise operators
1 | 1;  # 1
1 & 0;  # 0
1 ^ 2;  # 3
1 << 1; # 2
2 >> 1; # 1
~3;     # ~11 = 00


#! 
#   CONCATENATION 
!#

# numeric + numeric = numeric
    5 + 7;  # 12

# numeric + string = string
    1 + ": ...";    # "1: ..."

# string + numeric = string
    "Result: " + 42;    # "Result: 42"

# string + string = string
    "Hello, " + "World!";   # "Hello, World!"

# All other pairs throw an `OperatorDisruption`


#! 
#   REPETITION 
!#

# numeric * string = string
    3 * "Hi! "; # "Hi! Hi! Hi! "

# string * number = string
    "Hi! " * 3; # "Hi! Hi! Hi! "

# All other pairs throw an `OperatorDisruption`